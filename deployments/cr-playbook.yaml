
- hosts: localhost
  tasks:
    - become: true
      lineinfile:
        line: "127.0.0.2 db zk launcher executor web scheduler"
        path: /etc/hosts
        regexp: "^127.0.0.2 .*"
    - changed_when: _volume_zuul.stderr
      name: "Get or create volume"
      register: _volume_zuul
      shell: "podman volume inspect zuul-zuul --format \"{{'{{'}}.Mountpoint{{'}}'}}\" || ( podman volume create zuul-zuul && podman volume inspect zuul-zuul --format \"{{'{{'}}.Mountpoint{{'}}'}}\" )"
    - changed_when: _volume_nodepool.stderr
      name: "Get or create volume"
      register: _volume_nodepool
      shell: "podman volume inspect zuul-nodepool --format \"{{'{{'}}.Mountpoint{{'}}'}}\" || ( podman volume create zuul-nodepool && podman volume inspect zuul-nodepool --format \"{{'{{'}}.Mountpoint{{'}}'}}\" )"
    - copy:
        content: |
          [gearman]
          server=scheduler
          
          [gearman_server]
          start=true
          
          [zookeeper]
          hosts=zk
          
          [merger]
          git_user_email=zuul@localhost
          git_user_name=Zuul
          
          [scheduler]
          tenant_config=/etc/zuul-scheduler/main.yaml
          
          [web]
          listen_address=0.0.0.0
          root=http://web:9000
          
          [executor]
          private_key_file=/etc/zuul-executor/id_rsa
          manage_ansible=false
          
          [connection "sql"]
          driver=sql
          dburi=postgresql://zuul:super-secret@db/zuul
          
          [connection opendev.org]
          driver=git
          baseurl=https://opendev.org
          
          [connection review.rdoproject.org]
          driver=gerrit
          server=review.rdoproject.org
          sshkey=/etc/zuul-gerrit-review.rdoproject.org/id_rsa
          user=zuul
          baseurl=https://review.rdoproject.org/r/
          [connection github.com]
          driver=github
          server=github.com
          app_id={github.app_id}
          app_key=/etc/zuul-github-github.com/github_rsa
        dest: "{{ _volume_zuul.stdout_lines[-1] }}/zuul.conf"
        serole: object_r
        setype: container_file_t
        seuser: system_u
    - copy:
        content: |
          zookeeper-servers:
            - host: zk
              port: 2181
          webapp:
            port: 5000
          
        dest: "{{ _volume_nodepool.stdout_lines[-1] }}/nodepool.yaml"
        serole: object_r
        setype: container_file_t
        seuser: system_u
    - command: "echo: NotImplemented"
      name: "TODO: create fact from secret env volume content"
    - command: "podman create --name zuul-db --env=POSTGRES_PASSWORD='super-secret' --env=POSTGRES_USER='zuul' --network=host docker.io/library/postgres:12.1"
      name: "Create container"
    - file:
        path: "{{ ansible_user_dir }}/.config/systemd/user"
        state: directory
    - name: "Create systemd unit"
      shell: "podman generate systemd --name zuul-db > {{ ansible_user_dir }}/.config/systemd/user/zuul-db.service"
    - systemd:
        daemon_reload: true
        name: zuul-db
        scope: user
        state: started
    - command: "podman create --name zuul-zk --network=host quay.io/software-factory/zookeeper:3.4"
      name: "Create container"
    - file:
        path: "{{ ansible_user_dir }}/.config/systemd/user"
        state: directory
    - name: "Create systemd unit"
      shell: "podman generate systemd --name zuul-zk > {{ ansible_user_dir }}/.config/systemd/user/zuul-zk.service"
    - systemd:
        daemon_reload: true
        name: zuul-zk
        scope: user
        state: started
    - command: "podman create --name zuul-launcher --volume=zuul-nodepool:/etc/nodepool --volume=nodepool-yaml-conf:/etc/nodepool-user --volume=kube-config:/etc/nodepool-kubernetes --env=KUBECONFIG='/etc/nodepool-kubenertes/kube.config' --env=OS_CLIENT_CONFIG_FILE='/etc/nodepool-openstack/undefined' --network=host quay.io/software-factory/nodepool-launcher:3.4 \"sh\" \"-c\" \"cat /etc/nodepool/nodepool.yaml /etc/nodepool-user/nodepool.yaml > ~/nodepool.yaml ; nodepool-launcher -d -c ~/nodepool.yaml\""
      name: "Create container"
    - file:
        path: "{{ ansible_user_dir }}/.config/systemd/user"
        state: directory
    - name: "Create systemd unit"
      shell: "podman generate systemd --name zuul-launcher > {{ ansible_user_dir }}/.config/systemd/user/zuul-launcher.service"
    - systemd:
        daemon_reload: true
        name: zuul-launcher
        scope: user
        state: started
    - command: "podman create --name zuul-executor --privileged --volume=zuul-zuul:/etc/zuul --volume=executor-ssh-key:/etc/zuul-executor --volume=rdo-key:/etc/zuul-gerrit-review.rdoproject.org --volume=github:/etc/zuul-github-github.com --network=host quay.io/software-factory/zuul-executor:3.4 \"zuul-executor\" \"-d\""
      name: "Create container"
    - file:
        path: "{{ ansible_user_dir }}/.config/systemd/user"
        state: directory
    - name: "Create systemd unit"
      shell: "podman generate systemd --name zuul-executor > {{ ansible_user_dir }}/.config/systemd/user/zuul-executor.service"
    - systemd:
        daemon_reload: true
        name: zuul-executor
        scope: user
        state: started
    - command: "podman create --name zuul-web --volume=zuul-zuul:/etc/zuul --network=host quay.io/software-factory/zuul-web:3.4 \"zuul-web\" \"-d\""
      name: "Create container"
    - file:
        path: "{{ ansible_user_dir }}/.config/systemd/user"
        state: directory
    - name: "Create systemd unit"
      shell: "podman generate systemd --name zuul-web > {{ ansible_user_dir }}/.config/systemd/user/zuul-web.service"
    - systemd:
        daemon_reload: true
        name: zuul-web
        scope: user
        state: started
    - command: "podman create --name zuul-scheduler --volume=zuul-zuul:/etc/zuul --volume=zuul-yaml-conf:/etc/zuul-scheduler --volume=rdo-key:/etc/zuul-gerrit-review.rdoproject.org --volume=github:/etc/zuul-github-github.com --network=host quay.io/software-factory/zuul-scheduler:3.4 \"zuul-scheduler\" \"-d\""
      name: "Create container"
    - file:
        path: "{{ ansible_user_dir }}/.config/systemd/user"
        state: directory
    - name: "Create systemd unit"
      shell: "podman generate systemd --name zuul-scheduler > {{ ansible_user_dir }}/.config/systemd/user/zuul-scheduler.service"
    - systemd:
        daemon_reload: true
        name: zuul-scheduler
        scope: user
        state: started
